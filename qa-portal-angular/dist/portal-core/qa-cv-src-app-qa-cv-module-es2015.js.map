{"version":3,"sources":["webpack:///../qa-cv/src/app/cv-card-base/cv-card-base.component.html","webpack:///../qa-cv/src/app/cv-hobbies/cv-hobbies.component.html","webpack:///../qa-cv/src/app/cv-profile/cv-profile.component.html","webpack:///../qa-cv/src/app/cv-qualis/cv-qualification.component.html","webpack:///../qa-cv/src/app/cv-search/cv-search.component.html","webpack:///../qa-cv/src/app/cv-skills/cv-skills.component.html","webpack:///../qa-cv/src/app/cv-work-exp/cv-work-exp.component.html","webpack:///../qa-cv/src/app/view-cv/submit-confirm-dialog/submit-confirm-dialog.component.html","webpack:///../qa-cv/src/app/view-cv/view-cv.component.html","webpack:///../qa-cv/src/app/_common/models/cv.constants.ts","webpack:///../qa-cv/src/app/_common/models/qac-cv-db.model.ts","webpack:///../qa-cv/src/app/cv-card-base/cv-card-base.component.scss","webpack:///../qa-cv/src/app/cv-card-base/cv-card-base.component.ts","webpack:///../qa-cv/src/app/cv-hobbies/cv-hobbies.component.css","webpack:///../qa-cv/src/app/cv-hobbies/cv-hobbies.component.ts","webpack:///../qa-cv/src/app/cv-profile/cv-profile.component.css","webpack:///../qa-cv/src/app/cv-profile/cv-profile.component.ts","webpack:///../qa-cv/src/app/cv-qualis/cv-qualification.component.ts","webpack:///../qa-cv/src/app/cv-routing.module.ts","webpack:///../qa-cv/src/app/cv-search/cv-search.component.ts","webpack:///../qa-cv/src/app/cv-search/models/mock-filters.ts","webpack:///../qa-cv/src/app/cv-search/services/cv-search-filter.service.ts","webpack:///../qa-cv/src/app/cv-search/services/cv-search.service.ts","webpack:///../qa-cv/src/app/cv-skills/cv-skills.component.css","webpack:///../qa-cv/src/app/cv-skills/cv-skills.component.ts","webpack:///../qa-cv/src/app/cv-work-exp/cv-work-exp.component.ts","webpack:///../qa-cv/src/app/qa-cv.module.ts","webpack:///../qa-cv/src/app/view-cv/models/view-cv.constants.ts","webpack:///../qa-cv/src/app/view-cv/services/view-cv-page-data.service.ts","webpack:///../qa-cv/src/app/view-cv/services/view-cv-state-manager.service.ts","webpack:///../qa-cv/src/app/view-cv/services/view-cv.service.ts","webpack:///../qa-cv/src/app/view-cv/submit-confirm-dialog/submit-confirm-dialog.component.ts","webpack:///../qa-cv/src/app/view-cv/view-cv.component.scss","webpack:///../qa-cv/src/app/view-cv/view-cv.component.ts","webpack:///./src/app/_common/models/portal-constants.ts"],"names":[],"mappings":"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","file":"qa-cv-src-app-qa-cv-module-es2015.js","sourcesContent":["module.exports = \"<mat-card class=\\\"card-base mat-elevation-z2\\\">\\n  <mat-drawer-container class=\\\"card-base-content-container\\\" autosize>\\n    <mat-drawer #drawer class=\\\"card-base-drawer\\\" mode=\\\"side\\\" position=\\\"end\\\">\\n      <div class=\\\"card-base-drawer-content\\\">\\n        <div class=\\\"top\\\">\\n          <div class=\\\"drawer-title\\\">\\n            <h4>\\n              Comments\\n            </h4>\\n          </div>\\n          <button mat-icon-button (click)=\\\"drawer.close()\\\" title=\\\"Hide comments\\\">\\n            <mat-icon>chevron_right</mat-icon>\\n          </button>\\n        </div>\\n        <div #commentContainer class=\\\"middle\\\" data-simplebar>\\n          <div class=\\\"comment-bubble\\\" *ngFor=\\\"let comment of feedback\\\">\\n\\n            <div class=\\\"comment-body\\\">\\n              {{comment.comment}}\\n            </div>\\n            <div class=\\\"comment-details mat-caption\\\">\\n              <div class=\\\"reviewer\\\">\\n                {{comment.reviewer}}\\n              </div>\\n              <div class=\\\"date\\\" [title]=\\\"getFullDate(comment.date)\\\">\\n                {{getFormattedDate(comment.date)}}\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"!feedback || feedback.length == 0\\\" class=\\\"no-comments-text\\\">\\n            No comments yet\\n          </div>\\n        </div>\\n\\n        <div class=\\\"bottom\\\" *ngIf=\\\"canComment\\\">\\n          <form class=\\\"comment-form\\\" (ngSubmit)=\\\"addFeedbackItem()\\\">\\n            <mat-form-field class=\\\"comment-form-field\\\" class=\\\"comment-field\\\"\\n                            [hideRequiredMarker]=\\\"options.value.hideRequired\\\" floatLabel=\\\"never\\\">\\n              <input [formControl]=\\\"commentInput\\\" type=\\\"text\\\" matInput placeholder=\\\"Write a comment\\\" autocomplete=\\\"off\\\">\\n              <mat-icon matSuffix (click)=\\\"addFeedbackItem()\\\">send\\n              </mat-icon>\\n            </mat-form-field>\\n          </form>\\n        </div>\\n      </div>\\n    </mat-drawer>\\n    <mat-card-header>\\n        <mat-card-title>{{cardTitle || ''}}</mat-card-title>\\n        <button mat-icon-button *ngIf=\\\"showOpenButton && !drawer.opened\\\" (click)=\\\"drawer.open()\\\" title=\\\"Show comments\\\">\\n          <mat-icon>feedback</mat-icon>\\n        </button>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <div class=\\\"card-base-content-wrapper\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </mat-card-content>\\n  </mat-drawer-container>\\n</mat-card>\\n\"","module.exports = \"<mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\n        <textarea matInput rows=8\\n                  maxlength=\\\"750\\\"\\n                  placeholder=\\\"Maximum of 750 characters\\\"\\n                  [ngModel]=\\\"hobbies?.hobbiesDetails\\\"\\n                  (ngModelChange)=\\\"onInputChange($event)\\\"\\n                  [disabled]=\\\"isDisabled()\\\"></textarea>\\n</mat-form-field>\\n\"","module.exports = \"<mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\n  <textarea matInput rows=\\\"14\\\"\\n            maxlength=\\\"1800\\\"\\n            placeholder=\\\"Maximum of 1800 characters\\\"\\n            [ngModel]=\\\"profile?.profileDetails\\\"\\n            (ngModelChange)=\\\"onInputChange($event)\\\"\\n            [disabled]=\\\"isDisabled()\\\"></textarea>\\n</mat-form-field>\\n\"","module.exports = \"<table mat-table class=\\\"qa-table w-100\\\" [dataSource]=\\\"qualificationsTableDataSource\\\">\\n\\n    <!-- COLUMNS -->\\n    <ng-container matColumnDef=\\\"qualificationDetails\\\">\\n        <th mat-header-cell *matHeaderCellDef>Qualification</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <input matInput [ngModel]=\\\"element.qualificationDetails\\\" placeholder=\\\"Qualification Details up to 80 characters\\\"\\n                   maxlength=\\\"80\\\"\\n                (ngModelChange)=\\\"onQualificationDetailsInputChange(element, $event)\\\" [readonly]=\\\"isDisabled()\\\">\\n        </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"remove\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\" class=\\\"icon-cell\\\">\\n            <button mat-icon-button (click)=\\\"onRemoveQualificationClicked(i)\\\" matTooltip=\\\"Remove\\\" [disabled]=\\\"isDisabled()\\\"\\n                matTooltipPosition=\\\"left\\\" aria-label=\\\"Remove this qualification\\\">\\n                <mat-icon>clear</mat-icon>\\n            </button></td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"feedback\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\" class=\\\"icon-cell\\\">\\n            <button mat-icon-button (click)=\\\"onFeedbackButtonClicked(i, element)\\\" matTooltip=\\\"Feedback\\\"\\n                matTooltipPosition=\\\"left\\\" aria-label=\\\"Show feedback for this qualification\\\">\\n                <mat-icon>feedback</mat-icon>\\n            </button></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"addNew\\\">\\n        <td mat-footer-cell *matFooterCellDef colspan=\\\"100%\\\">\\n            <button mat-button color=\\\"primary\\\" class=\\\"w-100\\\" [disabled]=\\\"isDisabled() || qualificationsTableDataSource.data.length === 3\\\"\\n                    matTooltip=\\\"Maximum of 3 qualifications\\\"\\n                (click)=\\\"onNewQualiClick()\\\">\\n                <mat-icon>add</mat-icon>\\n                Add new qualification\\n            </button>\\n        </td>\\n    </ng-container>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['qualificationDetails', 'remove', 'feedback']; let i = index;\\\">\\n    </tr>\\n    <tr mat-footer-row *matFooterRowDef=\\\"['addNew']\\\"></tr>\\n</table>\\n\"","module.exports = \"<div class=\\\"qa-app-title\\\">\\n  Administrator - CV Search\\n</div>\\n\\n<app-search-bar  placeholder=\\\"Search by name\\\" [backdropRef]=\\\"backdrop\\\" (search)=\\\"performSearch()\\\" [(value)]=\\\"inputName\\\"\\n  (filterApply)=\\\"performSearch()\\\" (filterReset)=\\\"onClearButtonClicked()\\\">\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Cohort</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedCohort\\\" placeholder=\\\"Filter by Cohort\\\">\\n      <mat-option [value]=\\\"null\\\">All</mat-option>\\n      <mat-option *ngFor=\\\"let cohort of filterOptions?.cohort\\\" [value]=\\\"cohort\\\">\\n        {{cohort}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Technology</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedTech\\\" placeholder=\\\"Filter by Technology\\\">\\n      <mat-option [value]=\\\"null\\\">All</mat-option>\\n      <mat-option *ngFor=\\\"let tech of filterOptions?.technology\\\" [value]=\\\"tech\\\">\\n        {{tech}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Status</mat-label>\\n    <mat-select [(ngModel)]=\\\"selectedStatus\\\" placeholder=\\\"Filter by Status\\\">\\n      <mat-option [value]=\\\"null\\\">All</mat-option>\\n      <mat-option *ngFor=\\\"let stat of filterOptions?.cvStatus\\\" [value]=\\\"stat\\\">\\n        {{stat}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</app-search-bar>\\n\\n<mat-card class=\\\"search-results-card\\\" *ngIf=\\\"!isLoading\\\">\\n  <mat-card-content>\\n    <div>\\n      <table mat-table [dataSource]=\\\"searchResultsDataSource\\\">\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef>Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fullName || '-'}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"cohort\\\">\\n          <th mat-header-cell *matHeaderCellDef>Cohort</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.cohort || '-'}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <th mat-header-cell *matHeaderCellDef> Status</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status || '-'}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"clients\\\">\\n          <th mat-header-cell *matHeaderCellDef> Clients</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.clients || '-'}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr class=\\\"data-row\\\" mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"onResultRowClicked(row)\\\">\\n        </tr>\\n      </table>\\n      <div class=\\\"spinner-container\\\">\\n        <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n  <!-- \\n  <mat-paginator [pageSizeOptions]=\\\"[5,10,20]\\\" showFirstLastButtons></mat-paginator> -->\\n</mat-card>\\n\\n<!-- <mat-paginator [length]=\\\"100\\\"\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n</mat-paginator> -->\\n<!-- \\n<div class=\\\"page-backdrop\\\" [class.visible]=\\\"filterExpanded\\\" (click)=\\\"filterExpanded = false;\\\">\\n</div> -->\\n<app-search-bar-backdrop #backdrop></app-search-bar-backdrop>\"","module.exports = \"<mat-form-field class=\\\"skills-chip-list\\\" *ngFor=\\\"let skillCat of skillCategories\\\">\\n  <mat-chip-list #chipList [attr.aria-label]=\\\"skillCat.label\\\">\\n    <ng-template [ngIf]=\\\"skills\\\">\\n      <mat-chip color=\\\"primary\\\" *ngFor=\\\"let skill of skills[skillCat.key]\\\">\\n        {{skill}}\\n      </mat-chip>\\n      <input [placeholder]=\\\"skillCat.label\\\" [matChipInputFor]=\\\"chipList\\\" readonly>\\n    </ng-template>\\n  </mat-chip-list>\\n</mat-form-field>\\n\\n<mat-form-field class=\\\"skills-chip-list\\\">\\n  <mat-chip-list #chipList aria-label=\\\"Other Skills\\\">\\n    <mat-chip color=\\\"primary\\\" selected *ngFor=\\\"let others of skills?.other\\\" [selectable]=\\\"selectable\\\"\\n      [removable]=\\\"!isDisabled()\\\" (removed)=\\\"remove(others)\\\">\\n      {{others}}\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n    </mat-chip>\\n    <input placeholder=\\\"Other skills\\\" [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n      [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"add($event)\\\" [disabled]=\\\"isDisabled()\\\">\\n  </mat-chip-list>\\n</mat-form-field>\\n\"","module.exports = \"<table mat-table class=\\\"qa-table w-100\\\" [dataSource]=\\\"workExperienceTableDataSource\\\" multiTemplateDataRows>\\n\\n  <!-- COLUMNS -->\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <th mat-header-cell *matHeaderCellDef>Job Title</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <div class=\\\"job-title-container\\\">\\n        <div class=\\\"job-title-text\\\">{{element?.jobTitle || 'Click to expand'}}</div>\\n        <div class=\\\"date-range-text\\\">{{getFormattedDateRange(element)}}</div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"remove\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <td mat-cell *matCellDef=\\\"let element; let i = dataIndex\\\" class=\\\"icon-cell\\\">\\n      <button mat-icon-button (click)=\\\"onRemoveWorkExperienceClicked(i)\\\" matTooltip=\\\"Remove\\\" matTooltipPosition=\\\"left\\\"\\n              [disabled]=\\\"isDisabled()\\\" aria-label=\\\"Remove this work experience\\\">\\n        <mat-icon>clear</mat-icon>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"feedback\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <td mat-cell *matCellDef=\\\"let element; let i = dataIndex\\\" class=\\\"icon-cell\\\">\\n      <button mat-icon-button (click)=\\\"onFeedbackButtonClicked($event, i, element)\\\" matTooltip=\\\"Feedback\\\"\\n              matTooltipPosition=\\\"left\\\" aria-label=\\\"Show feedback for this work experience\\\">\\n        <mat-icon>feedback</mat-icon>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n\\n  <!-- EXPANDER ROW COLUMN -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" colspan=\\\"100%\\\">\\n      <div class=\\\"row-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"job-title-container\\\">\\n          <mat-form-field class=\\\"job-title-field\\\" appearance=\\\"outline\\\">\\n            <mat-label>Job Title</mat-label>\\n            <input matInput [ngModel]=\\\"element.jobTitle\\\" (ngModelChange)=\\\"element.jobTitle = $event; announceChange();\\\"\\n                   [readonly]=\\\"isDisabled()\\\">\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"date-range-container\\\">\\n          <mat-form-field class=\\\"date-left\\\" appearance=\\\"outline\\\">\\n            <mat-label>Start</mat-label>\\n            <input matInput [matDatepicker]=\\\"picker1\\\" [ngModel]=\\\"element.start\\\"\\n                   (ngModelChange)=\\\"element.start = $event; announceChange();\\\" [readonly]=\\\"isDisabled()\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker1></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"date-right\\\" appearance=\\\"outline\\\">\\n            <mat-label>End</mat-label>\\n            <input matInput [matDatepicker]=\\\"picker2\\\" [ngModel]=\\\"element.end\\\"\\n                   (ngModelChange)=\\\"element.end = $event; announceChange();\\\" [readonly]=\\\"isDisabled()\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"description-container\\\">\\n          <mat-form-field class=\\\"description-field\\\" appearance=\\\"outline\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput cdkTextareaAutosize #autosize=\\\"cdkTextareaAutosize\\\" cdkAutosizeMinRows=\\\"2\\\"\\n                      cdkAutosizeMaxRows=\\\"5\\\" [ngModel]=\\\"element.workExperienceDetails\\\"\\n                      (ngModelChange)=\\\"element.workExperienceDetails = $event; announceChange();\\\"\\n                      maxlength=\\\"400\\\"\\n                      placeholder=\\\"Details of work experience up to maximum of 400 characters\\\"\\n                      [readonly]=\\\"isDisabled()\\\"></textarea>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <!-- FOOTER COLUMN -->\\n  <ng-container matColumnDef=\\\"addNew\\\">\\n    <td mat-footer-cell *matFooterCellDef colspan=\\\"100%\\\">\\n      <button mat-button color=\\\"primary\\\" class=\\\"w-100\\\"\\n              matTooltip=\\\"Maximum of 3 work experiences\\\"\\n              (click)=\\\"onNewWorkExperienceClick()\\\"\\n              [disabled]=\\\"isDisabled() || workExperienceTableDataSource.data.length === 3\\\">\\n        <mat-icon>add</mat-icon>\\n        Add work experience\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr> -->\\n  <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns; let i = index;\\\" class=\\\"selectable\\\"\\n      [class.expanded]=\\\"expandedElement === element\\\"\\n      (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']; let i = index;\\\" class=\\\"expander-row\\\"></tr>\\n  <tr mat-footer-row *matFooterRowDef=\\\"['addNew']\\\"></tr>\\n</table>\\n\"","module.exports = \"<h1 mat-dialog-title>Are you Sure?</h1>\\n<div mat-dialog-content>\\n  You won't be able to make any changes while your trainer is reviewing your CV.\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\" cdkFocusInitial>Cancel</button>\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n</div>\"","module.exports = \"<div class=\\\"qa-app-title\\\">\\n  Trainee - Maintain CV\\n</div>\\n\\n<div style=\\\"display: flex; justify-content: center;\\\">\\n  <mat-spinner [diameter]=\\\"70\\\" *ngIf=\\\"loadingData\\\"></mat-spinner>\\n</div>\\n\\n<div *ngIf=\\\"!loadingData\\\">\\n  <div\\n    style=\\\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; font-size: 18px;\\\">\\n    <div style=\\\"color: #004050\\\">{{cvData?.fullName}}</div>\\n    <div style=\\\"margin-left: auto; color: #004050\\\"><b>CV Status:</b> {{cvData?.status}}</div>\\n  </div>\\n\\n  <div class=\\\"cv-content-wrapper\\\" (onSubmit)=\\\"onCvSubmitForReview($event)\\\">\\n    <section>\\n      <app-cv-card-base cardTitle=\\\"Personal Profile\\\" [canComment]=\\\"canComment\\\"\\n        [feedback]=\\\"cvData?.profile?.profileFeedback\\\">\\n        <app-cv-profile [profile]=\\\"cvData?.profile\\\" (profileChange)=\\\"cvData.profile = $event\\\" [canEdit]=\\\"canEdit\\\">\\n        </app-cv-profile>\\n      </app-cv-card-base>\\n    </section>\\n\\n    <section>\\n      <app-cv-card-base cardTitle=\\\"Hobbies and Interests\\\" [canComment]=\\\"canComment\\\"\\n        [feedback]=\\\"cvData?.hobbies?.hobbiesFeedback\\\">\\n        <app-cv-hobbies [hobbies]=\\\"cvData?.hobbies\\\" (hobbiesChange)=\\\"cvData.hobbies = $event\\\" [canEdit]=\\\"canEdit\\\">\\n        </app-cv-hobbies>\\n      </app-cv-card-base>\\n    </section>\\n\\n    <section>\\n      <app-cv-card-base #qualCard [feedback]=\\\"qualificationFeedback\\\" [canComment]=\\\"canComment\\\"\\n        (feedbackChange)=\\\"onQualificationFeedbackChange($event)\\\" [showOpenButton]=\\\"false\\\" cardTitle=\\\"Qualifications\\\">\\n        <app-cv-qualis [qualifications]=\\\"cvData?.allQualifications\\\"\\n          (qualificationsChange)=\\\"cvData.allQualifications = $event\\\"\\n          (feedbackClick)=\\\"onQualificationFeedbackClick($event, qualCard)\\\" [canEdit]=\\\"canEdit\\\">\\n        </app-cv-qualis>\\n      </app-cv-card-base>\\n    </section>\\n\\n    <section>\\n      <app-cv-card-base #expCard [feedback]=\\\"workExperienceFeedback\\\" [canComment]=\\\"canComment\\\"\\n        (feedbackChange)=\\\"onWorkExperienceFeedbackChange($event)\\\" [showOpenButton]=\\\"false\\\" cardTitle=\\\"Work Experience\\\">\\n        <app-cv-work-exp [experiences]=\\\"cvData?.allWorkExperience\\\" \\n          (experiencesChange)=\\\"cvData.allWorkExperience = $event\\\"\\n          (feedbackClick)=\\\"onWorkExperienceFeedbackClick($event, expCard)\\\" [canEdit]=\\\"canEdit\\\">\\n        </app-cv-work-exp>\\n      </app-cv-card-base>\\n    </section>\\n\\n    <section>\\n      <app-cv-card-base [showOpenButton]=\\\"false\\\" cardTitle=\\\"Skills\\\">\\n        <app-cv-skills [skills]=\\\"cvData?.allSkills[0]\\\" (skillsChange)=\\\"cvData.allSkills[0] = $event\\\"\\n          [canEdit]=\\\"canEdit\\\">\\n        </app-cv-skills>\\n      </app-cv-card-base>\\n    </section>\\n\\n\\n    <div class=\\\"button-row\\\">\\n      <div *ngIf=\\\"isTraineeView\\\"\\n        style=\\\"width: 50%; display:flex; flex-direction: row; justify-content: left; align-items: center\\\">\\n        <button *ngIf=\\\"!canComment && cvData.status !== 'Approved'\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"onCvSave()\\\"\\n          title=\\\"Save all Changes\\\" [disabled]=\\\"!cvData || cvData.status==='For Review'\\\">Save\\n        </button>\\n        <div *ngIf=\\\"!canComment\\\" style=\\\"margin-right: 20px\\\"></div>\\n        <button *ngIf=\\\"!canComment && allDetailsEntered() && cvData.status !== 'Approved'\\\" mat-flat-button\\n          color=\\\"primary\\\" (click)=\\\"openDialog()\\\" title=\\\"Submit for Review\\\"\\n          [disabled]=\\\"!cvData || cvData.status==='For Review'\\\">Submit\\n        </button>\\n\\n\\n        <button *ngIf=\\\"cvData.status === 'Approved' && isTraineeView\\\" mat-flat-button color=\\\"primary\\\"\\n          (click)=\\\"onInitialiseNewCv()\\\" title=\\\"Create New Cv\\\">\\n          New CV\\n        </button>\\n        <mat-checkbox *ngIf=\\\"cvData.status === 'Approved' && isTraineeView\\\" style=\\\"margin-left: 15px;\\\"\\n          aria-label=\\\"Use current CV as template\\\" label=\\\"Use current CV as template\\\" labelPosition=\\\"after\\\"\\n          color=\\\"primary\\\" [ngModel]=\\\"useExistingCvAsTemplate\\\" [value]=\\\"useExistingCvAsTemplate\\\"\\n          (change)=\\\"onUseExistingCvAsTemplateChanged()\\\">Use current CV as template\\n        </mat-checkbox>\\n      </div>\\n\\n      <div *ngIf=\\\"!isTraineeView\\\"\\n        style=\\\"width: 50%; display:flex; flex-direction: row; justify-content: left; align-items: center\\\">\\n        <button *ngIf=\\\"canComment && cvData.status !== 'Approved'\\\" mat-flat-button color=\\\"primary\\\"\\n          (click)=\\\"onCvApproved()\\\" title=\\\"Approve Cv\\\"\\n          [disabled]=\\\"!cvData || cvData.status==='In Progress' || cvData.status === 'Failed Review' || !cvData.status\\\">\\n          Approve\\n        </button>\\n        <div *ngIf=\\\"canComment\\\" style=\\\"margin-right: 20px\\\"></div>\\n        <button *ngIf=\\\"canComment  && cvData.status !== 'Approved'\\\" mat-flat-button color=\\\"primary\\\"\\n          (click)=\\\"onCvFailedReview()\\\" title=\\\"Fail Cv\\\"\\n          [disabled]=\\\"!cvData || cvData.status==='In Progress' || !cvData.status || cvData.status === 'Failed Review'\\\">\\n          Fail\\n        </button>\\n      </div>\\n\\n      <button style=\\\"margin-left: auto;\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"onDisplayPdf()\\\" title=\\\"Open PDF\\\"\\n        [disabled]=\\\"!cvData || !allDetailsEntered()\\\">View PDF\\n      </button>\\n    </div>\\n  </div>\\n</div>\"","export const ADMIN_CV_SEARCH = 'qa/portal/training/cv/admin/search';\nexport const APPLICATION_PDF_CONTENT_TYPE = 'application/pdf';","import { IProfile } from './profile.model';\nimport { IHobbies } from './hobbies.model';\nimport { IWorkExperience } from './work-experience.model';\nimport { IQualification } from './qualification.model';\nimport { ISkills } from './skills.model';\n\nexport interface ICvModel {\n\n    status: string;\n    id: string;\n    versionNumber: number;\n    userName: string;\n    firstName: string;\n    surname: string;\n    fullName: string;\n    cohort: string;\n    profile: IProfile;\n    allSkills: ISkills[];\n    allQualifications: IQualification[];\n    allWorkExperience: IWorkExperience[];\n    hobbies: IHobbies;\n}\n\n\nexport const DEFAULT_CV: Partial<ICvModel> = {\n    versionNumber: 1,\n    profile: {\n        profileDetails: '',\n        profileFeedback: []\n    },\n    allSkills: [{\n        programmingLanguages: [],\n        ides: [],\n        operatingSystems: [],\n        devops: [],\n        databases: [],\n        platforms: [],\n        other: []\n    }],\n    allQualifications: [],\n    allWorkExperience: [],\n    hobbies: {\n        hobbiesDetails: '',\n        hobbiesFeedback: []\n    }\n};\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9xYS1jdi9zcmMvYXBwL2N2LWNhcmQtYmFzZS9jdi1jYXJkLWJhc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { KeycloakService } from 'keycloak-angular';\nimport { IFeedback } from '../_common/models/feedback.model';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-cv-card-base',\n  templateUrl: './cv-card-base.component.html',\n  styleUrls: ['./cv-card-base.component.scss']\n})\nexport class CvCardBaseComponent {\n  @Input() cardTitle: string;\n  @Input() canComment: boolean;\n  @Input() canEdit: boolean;\n  @Input() feedback: IFeedback[];\n  @Output() feedbackChange = new EventEmitter<IFeedback[]>();\n  @Input() showOpenButton: boolean = true;\n  @ViewChild('commentContainer', { static: true }) commentContainer: ElementRef;\n  @ViewChild('drawer', { static: true }) public drawer: MatDrawer;\n\n  public commentInput = new FormControl('', Validators.required);\n  public options: FormGroup;\n\n  constructor(private keycloak: KeycloakService, fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: true,\n    });\n  }\n\n  getFormattedDate(date: string): string {\n    return moment(date).fromNow();\n  }\n\n  getFullDate(date: string): string {\n    return moment(date).format('dddd, MMMM Do YYYY, h:mm:ss a');\n  }\n\n  scrollCommentsToBottom(): void {\n    const { SimpleBar } = this.commentContainer.nativeElement;\n    SimpleBar.getScrollElement().scrollTo(0, SimpleBar.contentEl.clientHeight);\n  }\n\n\n  addFeedbackItem(): void {\n    if (this.commentInput.valid) {\n      const fb: IFeedback = {\n        comment: this.commentInput.value,\n        date: moment().format(),\n        reviewer: this.keycloak.getUsername()\n      };\n      this.feedback.push(fb);\n      this.feedbackChange.emit(this.feedback);\n      this.commentInput.reset();\n      this.commentInput.markAsUntouched();\n\n      setTimeout(() => {\n        this.scrollCommentsToBottom();\n      }, 0);\n    }\n  }\n}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3FhLWN2L3NyYy9hcHAvY3YtaG9iYmllcy9jdi1ob2JiaWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFdBQVc7RUFDYiIsImZpbGUiOiJwcm9qZWN0cy9xYS1jdi9zcmMvYXBwL2N2LWhvYmJpZXMvY3YtaG9iYmllcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IHobbies } from '../_common/models/hobbies.model';\n\n@Component({\n  selector: 'app-cv-hobbies',\n  templateUrl: './cv-hobbies.component.html',\n  styleUrls: ['./cv-hobbies.component.css']\n})\nexport class CvHobbiesComponent {\n  @Input() hobbies: IHobbies;\n  @Output() hobbiesChange = new EventEmitter<IHobbies>();\n  @Input() canEdit: boolean;\n\n  onInputChange(data: string): void {\n    this.hobbies.hobbiesDetails = data;\n    this.hobbiesChange.emit(this.hobbies);\n  }\n\n  isDisabled() {\n    return !this.canEdit;\n  }\n\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3FhLWN2L3NyYy9hcHAvY3YtcHJvZmlsZS9jdi1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJwcm9qZWN0cy9xYS1jdi9zcmMvYXBwL2N2LXByb2ZpbGUvY3YtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IProfile } from '../_common/models/profile.model';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-cv-profile',\n  templateUrl: './cv-profile.component.html',\n  styleUrls: ['./cv-profile.component.css']\n})\nexport class CvProfileComponent {\n  @Input() profile: IProfile;\n  @Output() profileChange = new EventEmitter<IProfile>();\n  @Input() canEdit: boolean;\n\n  onInputChange(data: string): void {\n    this.profile.profileDetails = data;\n    this.profileChange.emit(this.profile);\n  }\n\n  isDisabled() {\n    return !this.canEdit;\n  }\n\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IQualification } from '../_common/models/qualification.model';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-cv-qualis',\n  templateUrl: './cv-qualification.component.html'\n})\nexport class CvQualificationComponent {\n\n  @Input() set qualifications(qualis: IQualification[]) {\n    this.qualificationsTableDataSource.data = qualis;\n  }\n\n  get qualifications(): IQualification[] {\n    return this.qualificationsTableDataSource.data;\n  }\n\n  @Output() qualificationsChange = new EventEmitter<IQualification[]>();\n\n  @Output() feedbackClick = new EventEmitter<{ index: number, qualifications: IQualification }>();\n\n  @Input() canEdit: boolean;\n\n  public qualificationsTableDataSource = new MatTableDataSource<IQualification>();\n\n  onNewQualiClick(): void {\n    this.qualifications = [...this.qualifications,\n    {\n      qualificationDetails: '',\n      qualificationFeedback: []\n    }];\n    this.qualificationsChange.emit(this.qualifications);\n  }\n\n  onFeedbackButtonClicked(index: number, qualifications: IQualification): void {\n    this.feedbackClick.emit({ index, qualifications });\n  }\n\n\n  public announceChange() {\n    this.qualificationsChange.emit(this.qualifications);\n  }\n\n  public onQualificationDetailsInputChange(qualification: IQualification, value: string) {\n    qualification.qualificationDetails = value;\n    this.announceChange();\n  }\n\n  public onRemoveQualificationClicked(index: number): void {\n    this.qualificationsTableDataSource.data.splice(index, 1); // setters don't get called by higher order functions so do it directly\n    this.qualificationsTableDataSource._updateChangeSubscription(); // force the table to update (it doesn't auto detect splices)\n    this.announceChange();\n  }\n\n  isDisabled() {\n    return !this.canEdit;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewCvComponent } from './view-cv/view-cv.component';\nimport { CvSearchComponent } from './cv-search/cv-search.component';\n\nimport { AppAuthGuard } from '../../../portal-core/src/app/_common/guards/app-auth-guard';\nimport { TRAINEE_ROLE, TRAINING_ADMIN_ROLE } from '../../../portal-core/src/app/_common/models/portal-constants';\n\nconst routes: Routes = [\n  {\n    path: 'trainee/current',\n    component: ViewCvComponent,\n    canActivate: [AppAuthGuard],\n    data: {\n      roles: [\n        TRAINEE_ROLE\n      ]\n    }\n  },\n  {\n    path: 'admin/view/:id',\n    component: ViewCvComponent,\n    canActivate: [AppAuthGuard],\n    data: {\n      roles: [\n        TRAINING_ADMIN_ROLE\n      ]\n    }\n  },\n  {\n    path: 'admin/search',\n    component: CvSearchComponent,\n    canActivate: [AppAuthGuard],\n    data: {\n      roles: [\n        TRAINING_ADMIN_ROLE\n      ]\n    }\n  },\n  {\n    path: 'admin/view/:id',\n    component: ViewCvComponent,\n    canActivate: [AppAuthGuard],\n    data: {\n      roles: [\n        TRAINING_ADMIN_ROLE\n      ]\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CvRoutingModule { }\n","import { Component, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CVSearchHistoryService } from './services/cv-search.service';\nimport { CVSearchFilterService } from './services/cv-search-filter.service';\nimport { CVSearchModel } from './models/cv-search-model';\nimport { Subscription } from 'rxjs';\nimport { QaErrorHandlerService } from '../../../../portal-core/src/app/_common/services/qa-error-handler.service';\nimport { FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FilterModel } from './models/filter-search-model';\n\n@Component({\n  selector: 'app-cv-search',\n  templateUrl: './cv-search.component.html'\n})\nexport class CvSearchComponent implements OnInit {\n\n  // Results table data\n  public searchResultsDataSource = new MatTableDataSource<CVSearchModel>();\n  public displayedColumns: string[] = ['name', 'cohort', 'status', 'clients'];\n\n  // Filter options\n  public filterOptions: FilterModel;\n\n  // User input\n  public inputName: string;\n  public selectedCohort: string;\n  public selectedTech: string;\n  public selectedStatus: string;\n\n  // Misc\n  public isLoading = true;\n\n\n  constructor(\n    private cvSearchFilterService: CVSearchFilterService,\n    private cvSearchHistoryService: CVSearchHistoryService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const { name, cohort, tech, status } = this.activatedRoute.snapshot.queryParams;\n\n    // populate search field sources with params (if found)\n    this.inputName = name || '';\n    this.selectedCohort = cohort || null;\n    this.selectedTech = tech || null;\n    this.selectedStatus = status || null;\n\n    this.cvSearchFilterService.getFilters().subscribe(response => this.filterOptions = response); // Populate filters\n    this.performSearch(); // search on page load\n  }\n\n  performSearch(): void {\n    const name = this.inputName;\n    const cohort = this.selectedCohort;\n    const tech = this.selectedTech;\n    const status = this.selectedStatus;\n    this.isLoading = true;\n    this.searchResultsDataSource.data = [];\n\n    // Update URL params\n    this.router.navigate([], { relativeTo: this.activatedRoute, queryParams: { name, cohort, tech, status } });\n    this.cvSearchHistoryService.searchCVs({name, cohort, tech, status}).subscribe(response => {\n      this.searchResultsDataSource.data = response;\n      this.isLoading = false;\n    });\n  }\n\n  onResultRowClicked(row: CVSearchModel): void {\n    this.router.navigate(['qa', 'portal', 'training', 'cv', 'admin', 'view', row.id]);\n  }\n\n  onClearButtonClicked() {\n    this.inputName = '';\n    this.selectedCohort = null;\n    this.selectedTech = null;\n    this.selectedStatus = null;\n  }\n\n}\n","import { FilterModel } from './filter-search-model';\n\nexport const FILTERS: FilterModel = \n    {\n        technology: [\"Java\", \"Scala\", \"Python\"],\n\n        cvStatus: [\"In Progress\", \"For Review\", \"Failed Review\", \"Approved\"],\n\n        cohort: [\"CI Intake 1\", \"CI Intake 2\"]\n\n    }","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { FilterModel } from '../models/filter-search-model';\nimport { FILTERS } from '../models/mock-filters';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { QaHttpService } from 'projects/portal-core/src/app/_common/services/qa-http.service';\n\n@Injectable()\nexport class CVSearchFilterService {\n\n    constructor(private qaHttp: QaHttpService) { }\n\n    private filterUrl = 'portal-application-api/referencedata';  // URL to web api\n\n    /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    public getFiltersSearches(): Observable<FilterModel> {\n        return of(FILTERS)\n    }\n\n    /* GET filter dropdowns */\n    getFilters(): Observable<FilterModel> {\n\n        return this.qaHttp.get<FilterModel>(`${this.filterUrl}`).pipe(\n\n            catchError(this.handleError<FilterModel>('getFilters', {\n                technology: [],\n                cvStatus: [],\n                cohort: []\n            }))\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { CVSearchModel } from '../models/cv-search-model';\nimport { catchError } from 'rxjs/operators';\nimport { QaHttpService } from 'projects/portal-core/src/app/_common/services/qa-http.service';\n\n@Injectable()\nexport class CVSearchHistoryService {\n\n    constructor(private qahttp: QaHttpService) { }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    /* GET cvs whose name contains search term */\n    searchCVs(params: { name: string, cohort: string, tech: string, status: string }): Observable<CVSearchModel[]> {\n        return this.qahttp.get<CVSearchModel[]>({ ref: 'CV_SEARCH' }, { params }).pipe(\n            catchError(this.handleError<CVSearchModel[]>('searchCVs', []))\n        );\n    }\n}\n","module.exports = \".skills-chip-list {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3FhLWN2L3NyYy9hcHAvY3Ytc2tpbGxzL2N2LXNraWxscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztFQUNiIiwiZmlsZSI6InByb2plY3RzL3FhLWN2L3NyYy9hcHAvY3Ytc2tpbGxzL2N2LXNraWxscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNraWxscy1jaGlwLWxpc3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ISkills } from '../_common/models/skills.model';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-cv-skills',\n  templateUrl: './cv-skills.component.html',\n  styleUrls: ['./cv-skills.component.css']\n})\nexport class CvSkillsComponent implements OnInit {\n  @Input() skills: ISkills;\n  @Output() skillsChange = new EventEmitter<ISkills>();\n  @Input() canEdit: boolean;\n\n  public skillCategories = [\n    {\n      key: 'programmingLanguages',\n      label: 'Programming Languages'\n    },\n    {\n      key: 'ides',\n      label: 'IDEs'\n    },\n    {\n      key: 'devops',\n      label: 'Devops'\n    },\n    {\n      key: 'databases',\n      label: 'Databases'\n    },\n    {\n      key: 'platforms',\n      label: 'Platforms'\n    },\n    {\n      key: 'operatingSystems',\n      label: 'Operating Systems'\n    }\n  ]\n\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.skills.other.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(others: string): void {\n    const index = this.skills.other.indexOf(others);\n\n    if (index >= 0) {\n      this.skills.other.splice(index, 1);\n    }\n  }\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onInputChange(data) {\n    this.skills.other = data;\n    this.skillsChange.emit(this.skills);\n  }\n\n  isDisabled() {\n    return !this.canEdit;\n  }\n\n}\n\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { IWorkExperience } from '../_common/models/work-experience.model';\nimport { MatTableDataSource } from '@angular/material';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-cv-work-exp',\n  templateUrl: './cv-work-exp.component.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class CvWorkExpComponent {\n  @Input() set experiences(workExp: IWorkExperience[]) {\n    this.workExperienceTableDataSource.data = workExp;\n  }\n\n  get experiences(): IWorkExperience[] {\n    return this.workExperienceTableDataSource.data;\n  }\n\n  @Output() experiencesChange = new EventEmitter<IWorkExperience[]>();\n\n  @Output() feedbackClick = new EventEmitter<{ index: number, experience: IWorkExperience }>();\n\n  @Input() canEdit: boolean;\n\n  public workExperienceTableDataSource = new MatTableDataSource<IWorkExperience>();\n  public expandedElement: IWorkExperience;\n  public displayedColumns = ['title', 'remove', 'feedback'];\n\n\n  onNewWorkExperienceClick(): void {\n    const lastExp = this.experiences[this.experiences.length - 1];\n\n    if (!lastExp || lastExp.jobTitle || lastExp.end || lastExp.start || lastExp.workExperienceDetails) {\n      const newExperience = {\n        jobTitle: '',\n        start: '',\n        end: '',\n        workExperienceDetails: '',\n        workExperienceFeedback: []\n      };\n      this.experiences = [\n        ...this.experiences, newExperience];\n      this.expandedElement = newExperience;\n      this.experiencesChange.emit(this.experiences);\n    }\n  }\n\n  public onRemoveWorkExperienceClicked(index: number): void {\n    this.workExperienceTableDataSource.data.splice(index, 1); // setters don't get called by higher order functions so do it directly\n    this.workExperienceTableDataSource._updateChangeSubscription(); // force the table to update (it doesn't auto detect splices)\n    this.announceChange();\n  }\n\n  onFeedbackButtonClicked(event: MouseEvent, index: number, experience: IWorkExperience): void {\n    event.stopPropagation(); // Prevent event bubbling to the row below it.\n    this.expandedElement = experience;\n    this.feedbackClick.emit({ index, experience });\n  }\n\n  isDisabled() {\n    return !this.canEdit;\n  }\n\n  public announceChange() {\n    this.experiencesChange.emit(this.experiences);\n  }\n\n  public getFormattedDateRange({ start, end }: IWorkExperience): string {\n    const dateFormat = 'MMM GGGG';\n    const startMom = moment(start);\n    const endMom = !!end ? moment(end) : null;\n\n    if (startMom.isValid() || (!!endMom && endMom.isValid())) {\n      const formattedStart = startMom.format(dateFormat);\n      const formattedEnd = !!endMom ? endMom.format(dateFormat) : 'Present';\n      return formattedStart + ' - ' + formattedEnd;\n    } else {\n      return '';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QaCommonModule } from '../../../qa-common/src/app/qa-common.module';\nimport { CvRoutingModule } from './cv-routing.module';\nimport { ViewCvComponent } from './view-cv/view-cv.component';\nimport { CvProfileComponent } from './cv-profile/cv-profile.component';\nimport { CvWorkExpComponent } from './cv-work-exp/cv-work-exp.component';\nimport { CvHobbiesComponent } from './cv-hobbies/cv-hobbies.component';\nimport { CvQualificationComponent } from './cv-qualis/cv-qualification.component';\nimport { CvSkillsComponent } from './cv-skills/cv-skills.component';\nimport { MatNativeDateModule } from '@angular/material';\nimport { CVSearchFilterService } from './cv-search/services/cv-search-filter.service';\nimport { CvSearchComponent } from './cv-search/cv-search.component';\nimport { CvCardBaseComponent } from './cv-card-base/cv-card-base.component';\nimport { CVSearchHistoryService } from './cv-search/services/cv-search.service';\nimport { SubmitConfirmDialogComponent } from './view-cv/submit-confirm-dialog/submit-confirm-dialog.component';\nimport { ViewCvService } from './view-cv/services/view-cv.service';\nimport { ViewCvStateManagerService } from './view-cv/services/view-cv-state-manager.service';\nimport { ViewCvPageDataService } from './view-cv/services/view-cv-page-data.service';\n\n@NgModule({\n  declarations: [\n    ViewCvComponent,\n    CvProfileComponent,\n    CvWorkExpComponent,\n    CvHobbiesComponent,\n    CvQualificationComponent,\n    CvSkillsComponent,\n    CvSearchComponent,\n    CvCardBaseComponent,\n    SubmitConfirmDialogComponent,\n    CvCardBaseComponent\n  ],\n  imports: [\n    QaCommonModule,\n    CvRoutingModule,\n    MatNativeDateModule\n  ],\n  providers: [\n    CVSearchHistoryService,\n    CVSearchFilterService,\n    ViewCvService,\n    ViewCvStateManagerService,\n    ViewCvPageDataService\n  ],\n  entryComponents: [\n    SubmitConfirmDialogComponent\n  ]\n})\nexport class QaCvModule { }\n\n","export const IN_PROGRESS_STATUS = 'In Progress';\n\nexport const FOR_REVIEW_STATUS = 'For Review';\n\nexport const FAILED_REVIEW_STATUS = 'Failed Review';\n\nexport const APPROVED_STATUS = 'Approved';\n\nexport const ADMIN_USER_EDIT_STATES = [\n  FOR_REVIEW_STATUS\n];\n\nexport const TRAINING_USER_EDIT_STATES = [\n  IN_PROGRESS_STATUS,\n  FAILED_REVIEW_STATUS\n];\n","import {Injectable} from '@angular/core';\nimport {UserSkillsModel} from '../../_common/models/user-skills.model';\nimport {DEFAULT_CV, ICvModel} from '../../_common/models/qac-cv-db.model';\nimport {IN_PROGRESS_STATUS} from '../models/view-cv.constants';\n\n@Injectable()\nexport class ViewCvPageDataService {\n  constructor() {\n  }\n\n  public initialiseNewCv(cvData: ICvModel, useExistingCvAsTemplate: boolean): ICvModel {\n    const tempCv = cvData;\n    const emptyCv = null;\n    let newCv = null;\n    if (!!useExistingCvAsTemplate) {\n      newCv = {...DEFAULT_CV, ...cvData};\n      newCv.id = null;\n      newCv.versionNumber = null;\n    } else {\n      newCv = {...DEFAULT_CV, ...emptyCv};\n      newCv.allSkills = tempCv.allSkills;\n      newCv.fullName = tempCv.fullName;\n    }\n    newCv.status = IN_PROGRESS_STATUS;\n    return newCv;\n  }\n\n  public populateCvUserDetails(cvData: ICvModel, userSkillsModel: UserSkillsModel): void {\n    cvData.userName = userSkillsModel.userName;\n    cvData.firstName = userSkillsModel.userFirstName;\n    cvData.surname = userSkillsModel.userLastName;\n    cvData.fullName = cvData.firstName + ' ' + cvData.surname;\n    cvData.status = IN_PROGRESS_STATUS;\n  }\n\n  public populateCvSkills(cvData: ICvModel, userSkillsModel: UserSkillsModel): void {\n    Object.keys(cvData.allSkills[0]).forEach((skillCategory) => {\n      cvData.allSkills[0][skillCategory] = this.getSkillsArrayForTechnology(userSkillsModel.skills[skillCategory]);\n    });\n  }\n\n  private getSkillsArrayForTechnology(skills: any[]): string[] {\n    const skillsArr = [];\n    if (!!skills) {\n      skills.forEach(s => {\n        skillsArr.push(s.technologyName);\n      });\n    }\n    return skillsArr;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {TRAINEE_ROLE, TRAINING_ADMIN_ROLE} from '../../../../../portal-core/src/app/_common/models/portal-constants';\nimport {ActivatedRoute} from '@angular/router';\nimport {ICvModel} from '../../_common/models/qac-cv-db.model';\nimport {IQualification} from '../../_common/models/qualification.model';\nimport {IWorkExperience} from '../../_common/models/work-experience.model';\nimport {ADMIN_USER_EDIT_STATES, TRAINING_USER_EDIT_STATES} from '../models/view-cv.constants';\n\n\n@Injectable()\nexport class ViewCvStateManagerService {\n\n  constructor() {\n  }\n\n  public isPageEditable(activatedRoute: ActivatedRoute, cvData: ICvModel): boolean {\n    let isEditable = false;\n    if (activatedRoute.snapshot.data.roles[0] === TRAINING_ADMIN_ROLE) {\n      if (ADMIN_USER_EDIT_STATES.includes(cvData.status)) {\n        isEditable = true;\n      }\n    }\n\n    if (activatedRoute.snapshot.data.roles[0] === TRAINEE_ROLE) {\n      if (TRAINING_USER_EDIT_STATES.includes(cvData.status)) {\n        isEditable = true;\n      }\n    }\n    return isEditable;\n  }\n\n  public isPageDisplayForTrainee(activatedRoute: ActivatedRoute) {\n    if (activatedRoute.snapshot.data.roles[0] === TRAINING_ADMIN_ROLE) {\n      return false;\n    }\n    return true;\n  }\n\n  public isMandatoryCvDetailsEntered(cvData: ICvModel): boolean {\n    return !!this.allQualificationsCompleted(cvData.allQualifications) &&\n      !!this.allWorkExperienceCompleted(cvData.allWorkExperience) &&\n      !!cvData.hobbies && !!cvData.hobbies.hobbiesDetails &&\n      !!cvData.profile && !!cvData.profile.profileDetails;\n  }\n\n  private allQualificationsCompleted(qualifications: IQualification[]): boolean {\n    return !!qualifications &&\n      qualifications.length > 0 &&\n      !qualifications.find(q => !this.qualificationCompleted(q));\n  }\n\n  private qualificationCompleted(qualifiation: IQualification): boolean {\n    return !!qualifiation &&\n      !!qualifiation.qualificationDetails;\n  }\n\n  private allWorkExperienceCompleted(workExperiences: IWorkExperience[]): boolean {\n    return !!workExperiences &&\n      workExperiences.length > 0 &&\n      !workExperiences.find(w => !this.workExperienceCompleted(w));\n  }\n\n  private workExperienceCompleted(workExperience: IWorkExperience): boolean {\n    return !!workExperience &&\n      !!workExperience.start &&\n      !!workExperience.jobTitle &&\n      !!workExperience.workExperienceDetails;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ICvModel} from '../../_common/models/qac-cv-db.model';\nimport {\n  APPLICATION_PDF_CONTENT_TYPE\n} from '../../_common/models/cv.constants';\nimport {take} from 'rxjs/operators';\nimport { QaHttpService } from 'projects/portal-core/src/app/_common/services/qa-http.service';\n\n@Injectable()\nexport class ViewCvService {\n\n\n  constructor(private qaHttp: QaHttpService) {\n  }\n\n  /** GET cv by id. Will 404 if id not found */\n  getCvForId(id: string): Observable<ICvModel> {\n    return this.qaHttp.get<ICvModel>({ ref: 'GET_CV_FOR_ID', params: { id: id.toString() }}).pipe(\n      take(1)\n    );\n  }\n\n  getSkillsForTrainee(): Observable<any> {\n    return this.qaHttp.get<any>({ ref: 'GET_SKILLS_FOR_TRAINEE'}).pipe(\n      take(1)\n    );\n  }\n\n  getCurrentCvForTrainee(): Observable<ICvModel> {\n    return this.qaHttp.get<ICvModel>({ ref: 'GET_CURRENT_CV'}).pipe(\n      take(1)\n    );\n  }\n\n  displayPdf(cv: ICvModel) {\n    return this.qaHttp.post<any>({ ref: 'GENERATE_CV'}, cv).subscribe((response) => {\n      const file = new Blob([response], {type: APPLICATION_PDF_CONTENT_TYPE});\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, '_blank');\n    });\n  }\n\n  // /** POST: add a new cv to the server */\n  createCv(cv: ICvModel): Observable<ICvModel> {\n    return this.qaHttp.post<ICvModel>({ ref: 'SAVE_CV_DATA'}, cv).pipe(\n      take(1)\n    );\n  }\n\n  /** PUT: update the cv on the server */\n  updateCv(cv: ICvModel): Observable<ICvModel> {\n    return this.qaHttp.put<ICvModel>({ ref: 'SAVE_CV_DATA'}, cv).pipe(\n      take(1)\n    );\n  }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-submit-confirm-dialog',\n  templateUrl: './submit-confirm-dialog.component.html'\n})\nexport class SubmitConfirmDialogComponent {\n  @Output() public doSubmit = new EventEmitter<boolean>();\n\n  public canSubmit: boolean;\n\n  constructor(public dialogRef: MatDialogRef<SubmitConfirmDialogComponent>) { }\n\n  onNoClick(): void {\n    this.canSubmit = false;\n    this.doSubmit.emit();\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.canSubmit = true;\n    this.doSubmit.emit();\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".cv-content-wrapper > section {\\n  margin-bottom: 1rem;\\n}\\n.cv-content-wrapper > section:last-child {\\n  margin-bottom: 0;\\n}\\n.button-row {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3FhLWFkbWluL0RvY3VtZW50cy9xYS1wb3J0YWwtZGVwbG95bWVudC12Mi9xYS1wb3J0YWwtYW5ndWxhci9wcm9qZWN0cy9xYS1jdi9zcmMvYXBwL3ZpZXctY3Yvdmlldy1jdi5jb21wb25lbnQuc2NzcyIsInByb2plY3RzL3FhLWN2L3NyYy9hcHAvdmlldy1jdi92aWV3LWN2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksbUJBQUE7QUNBUjtBREdJO0VBQ0ksZ0JBQUE7QUNEUjtBREtBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0FDRkYiLCJmaWxlIjoicHJvamVjdHMvcWEtY3Yvc3JjL2FwcC92aWV3LWN2L3ZpZXctY3YuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3YtY29udGVudC13cmFwcGVyIHtcbiAgICA+c2VjdGlvbiB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgfVxuXG4gICAgPnNlY3Rpb246bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxufVxuXG4uYnV0dG9uLXJvdyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG59XG4iLCIuY3YtY29udGVudC13cmFwcGVyID4gc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uY3YtY29udGVudC13cmFwcGVyID4gc2VjdGlvbjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmJ1dHRvbi1yb3cge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xufSJdfQ== */\"","import {Component, OnInit, Output} from '@angular/core';\nimport {DEFAULT_CV, ICvModel} from '../_common/models/qac-cv-db.model';\nimport {ViewCvService} from './services/view-cv.service';\nimport {CvCardBaseComponent} from '../cv-card-base/cv-card-base.component';\nimport {IFeedback} from '../_common/models/feedback.model';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {MAT_DATE_LOCALE, MatDialog} from '@angular/material';\nimport {SubmitConfirmDialogComponent} from './submit-confirm-dialog/submit-confirm-dialog.component';\nimport {QaErrorHandlerService} from '../../../../portal-core/src/app/_common/services/qa-error-handler.service';\nimport {UserSkillsModel} from '../_common/models/user-skills.model';\nimport {TRAINING_ADMIN_ROLE} from '../../../../portal-core/src/app/_common/models/portal-constants';\nimport {ADMIN_CV_SEARCH} from '../_common/models/cv.constants';\nimport {\n  ViewCvStateManagerService\n} from './services/view-cv-state-manager.service';\nimport {ViewCvPageDataService} from './services/view-cv-page-data.service';\nimport {Observable} from 'rxjs';\nimport {APPROVED_STATUS, FAILED_REVIEW_STATUS, FOR_REVIEW_STATUS, IN_PROGRESS_STATUS} from './models/view-cv.constants';\n\n@Component({\n  selector: 'app-view-cv',\n  templateUrl: './view-cv.component.html',\n  styleUrls: ['./view-cv.component.scss'],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n  ]\n})\nexport class ViewCvComponent implements OnInit {\n\n  @Output() public canComment = false;\n\n  @Output() public canEdit = true;\n\n  useExistingCvAsTemplate = true;\n\n  isTraineeView = true;\n\n  loadingData = true;\n\n  qualificationFeedbackIndex: number;\n\n  workExperienceFeedbackIndex: number;\n\n  public cvData: ICvModel;\n\n  public workExperienceFeedback = [];\n\n  public qualificationFeedback = [];\n\n  constructor(\n    private cvService: ViewCvService,\n    private viewCvStateManagerService: ViewCvStateManagerService,\n    private viewCvPageDataService: ViewCvPageDataService,\n    private errorHandlerService: QaErrorHandlerService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.setRoleForPage();   // Is page being displayed for Trainee or Admin\n    if (this.isTraineeView) {\n      this.initialiseCvPageForTrainee();\n    } else {\n      this.initialiseCvPageForAdmin();\n    }\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(SubmitConfirmDialogComponent, {\n      width: '250px'\n    });\n    dialogRef.componentInstance.canSubmit = false;\n    dialogRef.componentInstance.doSubmit.subscribe(() => {\n      if (dialogRef.componentInstance.canSubmit === true) {\n        this.onCvSubmitForReview();\n      }\n    });\n    dialogRef.afterClosed().subscribe(() => {\n    });\n  }\n\n  onDisplayPdf() {\n    this.cvService.displayPdf(this.cvData);\n  }\n\n  onInitialiseNewCv() {\n    this.cvData = this.viewCvPageDataService.initialiseNewCv(this.cvData, this.useExistingCvAsTemplate);\n    this.initialiseBlankCvForTrainee();\n    this.refreshPageStatus();\n  }\n\n  onCvSave(): void {\n    if (!this.cvData.id) {\n      this.cvData.status = IN_PROGRESS_STATUS;\n    }\n    this.persistCvForTrainee();\n  }\n\n  onCvSubmitForReview(): void {\n    this.cvData.status = FOR_REVIEW_STATUS;\n    this.persistCvForTrainee();\n  }\n\n  onCvApproved(): void {\n    this.cvUpdatedByAdmin(APPROVED_STATUS);\n  }\n\n  onCvFailedReview(): void {\n    this.cvUpdatedByAdmin(FAILED_REVIEW_STATUS);\n  }\n\n  onWorkExperienceFeedbackClick({index}: { index: number }, expCard: CvCardBaseComponent): void {\n    this.workExperienceFeedbackIndex = index;\n    this.workExperienceFeedback = this.cvData.allWorkExperience[index].workExperienceFeedback;\n    expCard.drawer.open();\n  }\n\n  onWorkExperienceFeedbackChange(feedback: IFeedback[]): void {\n    this.cvData.allWorkExperience[this.workExperienceFeedbackIndex].workExperienceFeedback = feedback;\n  }\n\n  onQualificationFeedbackClick({index}: { index: number }, qualCard: CvCardBaseComponent): void {\n    this.qualificationFeedbackIndex = index;\n    this.qualificationFeedback = this.cvData.allQualifications[index].qualificationFeedback;\n    qualCard.drawer.open();\n  }\n\n  onQualificationFeedbackChange(feedback: IFeedback[]): void {\n    this.cvData.allQualifications[this.qualificationFeedbackIndex].qualificationFeedback = feedback;\n  }\n\n  onUseExistingCvAsTemplateChanged() {\n    this.useExistingCvAsTemplate = !this.useExistingCvAsTemplate;\n  }\n\n  private initialiseCvPageForTrainee() {\n    this.cvService.getCurrentCvForTrainee().subscribe(\n      (cv) => {\n        this.cvData = {...DEFAULT_CV, ...cv};    // use spread operator to merge blank default Cv with returned CV\n        if (this.noExistingCvForTrainee(cv)) {\n          this.initialiseBlankCvForTrainee();\n        } else {\n          this.refreshPageStatus();\n        }\n      },\n      (error) => {\n        this.processError(error);\n      });\n  }\n\n  private noExistingCvForTrainee(traineeCv: ICvModel): boolean {\n    return !traineeCv;\n  }\n\n  private initialiseBlankCvForTrainee() {\n    this.cvService.getSkillsForTrainee().subscribe((userSkillsModel: UserSkillsModel) => {\n      this.viewCvPageDataService.populateCvUserDetails(this.cvData, userSkillsModel);\n      this.viewCvPageDataService.populateCvSkills(this.cvData, userSkillsModel);\n      this.refreshPageStatus();\n    });\n  }\n\n  private initialiseCvPageForAdmin() {\n    this.activatedRoute.paramMap.subscribe(\n      (paramMap: ParamMap) => {\n        this.cvService.getCvForId(paramMap.get('id')).subscribe(\n          (response) => {\n            this.cvData = response;\n            this.refreshPageStatus();\n          },\n          (error) => {\n            this.processError(error);\n          });\n      });\n  }\n\n  private persistCvForTrainee() {\n    if (!this.cvData.id) {\n      this.createCv();\n    } else {\n      this.updateCv();\n    }\n  }\n\n  private createCv(): void {\n    this.processCvServiceResponse(this.cvService.createCv(this.cvData));\n  }\n\n  private updateCv(): void {\n    this.processCvServiceResponse(this.cvService.updateCv(this.cvData));\n  }\n\n  private processCvServiceResponse(obs: Observable<ICvModel>) {\n    obs.subscribe(\n      (response) => {\n        this.populateResponse(response);\n      },\n      (error) => {\n        this.processError(error);\n      }\n    );\n  }\n\n  private cvUpdatedByAdmin(cvStatus: string) {\n    this.cvData.status = cvStatus;\n    this.updateCv();\n    this.navigateToAdminSearch();\n  }\n\n  private setRoleForPage() {\n    this.isTraineeView = this.viewCvStateManagerService.isPageDisplayForTrainee(this.activatedRoute);\n  }\n\n  private populateResponse(response: ICvModel): void {\n    this.cvData = response;\n    this.setPageEditStatus();\n  }\n\n  private navigateToAdminSearch() {\n    this.router.navigateByUrl(ADMIN_CV_SEARCH);\n  }\n\n  private allDetailsEntered(): boolean {\n    return this.viewCvStateManagerService.isMandatoryCvDetailsEntered(this.cvData);\n  }\n\n  private processError(error: any) {\n    this.loadingData = false;\n    this.errorHandlerService.handleError(error);\n  }\n\n  private refreshPageStatus() {\n    this.setPageEditStatus();\n    this.setCommentStatus();\n    this.loadingData = false;\n  }\n\n  private setPageEditStatus(): void {\n    this.canEdit = this.viewCvStateManagerService.isPageEditable(this.activatedRoute, this.cvData);\n  }\n\n  private setCommentStatus() {\n    if (SubmitConfirmDialogComponent) {\n      this.canComment = this.activatedRoute.snapshot.data.roles[0] === TRAINING_ADMIN_ROLE && this.cvData.status === FOR_REVIEW_STATUS;\n    }\n  }\n}\n","// Roles for application\nexport const TRAINEE_ROLE = 'training-user';\nexport const TRAINER_ROLE = 'training-manager';\nexport const TRAINING_ADMIN_ROLE = 'training-admin';\nexport const SUPER_USER = 'super-user';\n"],"sourceRoot":""}